{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\SANTOSH\\\\Desktop\\\\Front_end\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\SANTOSH\\\\Desktop\\\\Front_end\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\SANTOSH\\\\Desktop\\\\Front_end\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\SANTOSH\\\\Desktop\\\\Front_end\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\SANTOSH\\\\Desktop\\\\Front_end\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\SANTOSH\\\\Desktop\\\\Front_end\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\SANTOSH\\\\Desktop\\\\Front_end\\\\client\\\\src\\\\components\\\\auth\\\\Chart.js\";\nimport React, { Component, PropTypes } from 'react';\nimport PureRenderMixin from 'react-addons-pure-render-mixin';\nimport vg from 'vega';\n\nvar Chart =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Chart, _Component);\n\n  function Chart(props) {\n    var _this;\n\n    _classCallCheck(this, Chart);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Chart).call(this, props));\n    _this.state = {\n      vis: null\n    }; // use PureRenderMixin to limit updates when they are not necessary\n\n    _this.shouldComponentUpdate = PureRenderMixin.shouldComponentUpdate.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this._handleHover = _this._handleHover.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  } // On initial load, generate the initial vis and attach signal listeners\n\n\n  _createClass(Chart, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          data = _this$props.data,\n          highlightedPoint = _this$props.highlightedPoint;\n\n      var spec = this._spec(); // parse the vega spec and create the vis\n\n\n      vg.parse.spec(spec, function (chart) {\n        var vis = chart({\n          el: _this2.refs.chartContainer\n        }).onSignal('hover', _this2._handleHover); // set the initial data\n\n        vis.data('points').insert(data); // set the initial highlighted point if available\n\n        if (highlightedPoint) {\n          vis.data('highlightedPoint').insert([highlightedPoint]);\n        } // render the vis\n\n\n        vis.update(); // store the vis object in state to be used on later updates\n\n        _this2.setState({\n          vis: vis\n        });\n      });\n    } // updates mean that either the data or the highlightedPoint changed\n\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      var vis = this.state.vis;\n      var _this$props2 = this.props,\n          data = _this$props2.data,\n          highlightedPoint = _this$props2.highlightedPoint;\n\n      if (vis) {\n        // update data in case it changed\n        vis.data('points').remove(function () {\n          return true;\n        }).insert(data); // update the highlighted point in case it changed\n\n        vis.data('highlightedPoint').remove(function () {\n          return true;\n        });\n\n        if (highlightedPoint) {\n          vis.data('highlightedPoint').insert([highlightedPoint]);\n        }\n\n        vis.update();\n      }\n    } // dummy render method that creates the container vega draws inside\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        ref: \"chartContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      });\n    }\n    /**\r\n     * handler called when the hover signal changes\r\n     */\n\n  }, {\n    key: \"_handleHover\",\n    value: function _handleHover(signalName, d) {\n      var onHighlight = this.props.onHighlight; // we only care if onHighlight exists\n\n      if (!onHighlight) {\n        return;\n      }\n\n      if (d) {\n        onHighlight(d.datum);\n      } else {\n        onHighlight(null);\n      }\n    } // the vega spec for the chart\n\n  }, {\n    key: \"_spec\",\n    value: function _spec() {\n      return {\n        'width': 400,\n        'height': 400,\n        'padding': {\n          'top': 10,\n          'left': 50,\n          'bottom': 50,\n          right: 10\n        },\n        'signals': [{\n          'name': 'hover',\n          'init': null,\n          'streams': [{\n            'type': '@cell:mouseover',\n            'expr': 'datum'\n          }, {\n            'type': '@cell:mouseout',\n            'expr': 'null'\n          }]\n        }],\n        'data': [{\n          'name': 'points'\n        }, {\n          'name': 'highlightedPoint'\n        }],\n        'scales': [{\n          'name': 'x',\n          'type': 'linear',\n          'domain': {\n            'data': 'points',\n            'field': 'distance'\n          },\n          'range': 'width'\n        }, {\n          'name': 'y',\n          'type': 'linear',\n          'domain': {\n            'data': 'points',\n            'field': 'value'\n          },\n          'range': 'height',\n          'nice': true\n        }],\n        'axes': [{\n          'type': 'x',\n          'scale': 'x',\n          'offset': 5,\n          'ticks': 5,\n          'title': 'Distance',\n          'layer': 'back'\n        }, {\n          'type': 'y',\n          'scale': 'y',\n          'offset': 5,\n          'ticks': 5,\n          'title': 'Value',\n          'layer': 'back'\n        }],\n        'marks': [{\n          'type': 'line',\n          'from': {\n            'data': 'points'\n          },\n          'interactive': false,\n          // <-- to prevent interaction with the mouse, so the voronoi cells get it all\n          'properties': {\n            'enter': {\n              'x': {\n                'scale': 'x',\n                'field': 'distance'\n              },\n              'y': {\n                'scale': 'y',\n                'field': 'value'\n              },\n              'stroke': {\n                'value': '#5357a1'\n              },\n              'strokeWidth': {\n                'value': 2\n              }\n            }\n          }\n        }, {\n          'type': 'path',\n          'name': 'cell',\n          'from': {\n            'mark': 'points',\n            'transform': [{\n              'type': 'voronoi',\n              'x': 'x',\n              'y': 'y'\n            }]\n          },\n          'properties': {\n            'update': {\n              'path': {\n                'field': 'layout_path'\n              },\n              'stroke': {\n                'value': null\n              },\n              'fill': {\n                'value': 'rgba(0,0,0,0)'\n              }\n            }\n          }\n        }, {\n          'type': 'symbol',\n          'from': {\n            'data': 'highlightedPoint'\n          },\n          'interactive': false,\n          // <-- to prevent interaction with the mouse to prevent flickering\n          'properties': {\n            'enter': {\n              'x': {\n                'scale': 'x',\n                'field': 'distance'\n              },\n              'y': {\n                'scale': 'y',\n                'field': 'value'\n              },\n              'fill': {\n                'value': '#fa7f9f'\n              },\n              'stroke': {\n                'value': '#891836'\n              },\n              'strokeWidth': {\n                'value': 1\n              },\n              'size': {\n                'value': 64\n              }\n            }\n          }\n        }]\n      };\n    }\n  }]);\n\n  return Chart;\n}(Component);\n\nLineChart.propTypes = {\n  data: PropTypes.array.isRequired,\n  onHighlight: PropTypes.func,\n  highlightedPoint: PropTypes.object\n};\nexport default Chart;","map":{"version":3,"sources":["C:\\Users\\SANTOSH\\Desktop\\Front_end\\client\\src\\components\\auth\\Chart.js"],"names":["React","Component","PropTypes","PureRenderMixin","vg","Chart","props","state","vis","shouldComponentUpdate","bind","_handleHover","data","highlightedPoint","spec","_spec","parse","chart","el","refs","chartContainer","onSignal","insert","update","setState","remove","signalName","d","onHighlight","datum","right","LineChart","propTypes","array","isRequired","func","object"],"mappings":"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","sourcesContent":["    \r\nimport React, { Component, PropTypes } from 'react';\r\nimport PureRenderMixin from 'react-addons-pure-render-mixin';\r\nimport vg from 'vega';\r\n\r\nclass Chart extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      vis: null\r\n    };\r\n\r\n    // use PureRenderMixin to limit updates when they are not necessary\r\n    this.shouldComponentUpdate = PureRenderMixin.shouldComponentUpdate.bind(this);\r\n\r\n    this._handleHover = this._handleHover.bind(this);\r\n  }\r\n\r\n  // On initial load, generate the initial vis and attach signal listeners\r\n  componentDidMount() {\r\n    const { data, highlightedPoint } = this.props;\r\n    const spec = this._spec();\r\n\r\n    // parse the vega spec and create the vis\r\n    vg.parse.spec(spec, chart => {\r\n      const vis = chart({ el: this.refs.chartContainer })\r\n        .onSignal('hover', this._handleHover);\r\n\r\n      // set the initial data\r\n      vis.data('points').insert(data);\r\n\r\n      // set the initial highlighted point if available\r\n      if (highlightedPoint) {\r\n        vis.data('highlightedPoint').insert([highlightedPoint]);\r\n      }\r\n\r\n      // render the vis\r\n      vis.update();\r\n\r\n      // store the vis object in state to be used on later updates\r\n      this.setState({ vis });\r\n    });\r\n  }\r\n\r\n  // updates mean that either the data or the highlightedPoint changed\r\n  componentDidUpdate() {\r\n    const { vis } = this.state;\r\n    const { data, highlightedPoint } = this.props;\r\n\r\n    if (vis) {\r\n      // update data in case it changed\r\n      vis.data('points').remove(() => true).insert(data);\r\n\r\n      // update the highlighted point in case it changed\r\n      vis.data('highlightedPoint').remove(() => true);\r\n      if (highlightedPoint) {\r\n        vis.data('highlightedPoint').insert([highlightedPoint]);\r\n      }\r\n\r\n      vis.update();\r\n    }\r\n  }\r\n\r\n  // dummy render method that creates the container vega draws inside\r\n  render() {\r\n    return (\r\n      <div ref='chartContainer'></div>\r\n    );\r\n  }\r\n\r\n  /**\r\n   * handler called when the hover signal changes\r\n   */\r\n  _handleHover(signalName, d) {\r\n    const { onHighlight } = this.props;\r\n\r\n    // we only care if onHighlight exists\r\n    if (!onHighlight) {\r\n      return;\r\n    }\r\n\r\n    if (d) {\r\n      onHighlight(d.datum);\r\n    } else {\r\n      onHighlight(null);\r\n    }\r\n  }\r\n\r\n  // the vega spec for the chart\r\n  _spec() {\r\n    return {\r\n      'width': 400,\r\n      'height': 400,\r\n      'padding': { 'top': 10, 'left': 50, 'bottom': 50, right: 10 },\r\n      'signals': [\r\n        {\r\n          'name': 'hover', 'init': null,\r\n          'streams': [\r\n            { 'type': '@cell:mouseover', 'expr': 'datum' },\r\n            { 'type': '@cell:mouseout', 'expr': 'null' }\r\n          ]\r\n        }\r\n      ],\r\n      'data': [{ 'name': 'points' }, { 'name': 'highlightedPoint' }],\r\n      'scales': [\r\n        {\r\n          'name': 'x',\r\n          'type': 'linear',\r\n          'domain': { 'data': 'points', 'field': 'distance' },\r\n          'range': 'width'\r\n        },\r\n        {\r\n          'name': 'y',\r\n          'type': 'linear',\r\n          'domain': { 'data': 'points', 'field': 'value' },\r\n          'range': 'height',\r\n          'nice': true\r\n        }\r\n      ],\r\n      'axes': [\r\n        {\r\n          'type': 'x',\r\n          'scale': 'x',\r\n          'offset': 5,\r\n          'ticks': 5,\r\n          'title': 'Distance',\r\n          'layer': 'back'\r\n        },\r\n        {\r\n          'type': 'y',\r\n          'scale': 'y',\r\n          'offset': 5,\r\n          'ticks': 5,\r\n          'title': 'Value',\r\n          'layer': 'back'\r\n        }\r\n      ],\r\n      'marks': [\r\n        {\r\n          'type': 'line',\r\n          'from': { 'data': 'points' },\r\n          'interactive': false, // <-- to prevent interaction with the mouse, so the voronoi cells get it all\r\n          'properties': {\r\n            'enter': {\r\n              'x': { 'scale': 'x', 'field': 'distance' },\r\n              'y': { 'scale': 'y', 'field': 'value' },\r\n              'stroke': { 'value': '#5357a1' },\r\n              'strokeWidth': { 'value': 2 }\r\n            }\r\n          }\r\n        },\r\n        {\r\n          'type': 'path',\r\n          'name': 'cell',\r\n          'from': {\r\n            'mark': 'points',\r\n            'transform': [\r\n              { 'type': 'voronoi', 'x': 'x', 'y': 'y' }\r\n            ]\r\n          },\r\n          'properties': {\r\n            'update': {\r\n              'path': { 'field': 'layout_path' },\r\n              'stroke': { 'value': null},\r\n              'fill': { 'value': 'rgba(0,0,0,0)' }\r\n            }\r\n          }\r\n        },\r\n        {\r\n          'type': 'symbol',\r\n          'from': { 'data': 'highlightedPoint' },\r\n          'interactive': false, // <-- to prevent interaction with the mouse to prevent flickering\r\n          'properties': {\r\n            'enter': {\r\n              'x': { 'scale': 'x', 'field': 'distance' },\r\n              'y': { 'scale': 'y', 'field': 'value' },\r\n              'fill': { 'value': '#fa7f9f' },\r\n              'stroke': { 'value': '#891836' },\r\n              'strokeWidth': { 'value': 1 },\r\n              'size': { 'value': 64 }\r\n            }\r\n          }\r\n        }\r\n      ]\r\n    };\r\n  }\r\n}\r\n\r\nLineChart.propTypes = {\r\n  data: PropTypes.array.isRequired,\r\n  onHighlight: PropTypes.func,\r\n  highlightedPoint: PropTypes.object\r\n};\r\n\r\nexport default Chart;"]},"metadata":{},"sourceType":"module"}