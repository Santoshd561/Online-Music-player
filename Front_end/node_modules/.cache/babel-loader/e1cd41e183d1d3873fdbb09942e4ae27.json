{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\SANTOSH\\\\Desktop\\\\Front_end\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\SANTOSH\\\\Desktop\\\\Front_end\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"C:\\\\Users\\\\SANTOSH\\\\Desktop\\\\Front_end\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:\\\\Users\\\\SANTOSH\\\\Desktop\\\\Front_end\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\SANTOSH\\\\Desktop\\\\Front_end\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\SANTOSH\\\\Desktop\\\\Front_end\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\SANTOSH\\\\Desktop\\\\Front_end\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\SANTOSH\\\\Desktop\\\\Front_end\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\SANTOSH\\\\Desktop\\\\Front_end\\\\client\\\\src\\\\components\\\\auth\\\\ResetPassword.js\";\nimport React, { Component } from \"react\";\nimport { Auth } from \"aws-amplify\";\nimport { Link } from \"react-router-dom\";\nimport \"./ResetPassword.css\";\n\nvar ResetPassword =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ResetPassword, _Component);\n\n  function ResetPassword(props) {\n    var _this;\n\n    _classCallCheck(this, ResetPassword);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ResetPassword).call(this, props));\n\n    _this.handleChange = function (event) {\n      _this.setState(_defineProperty({}, event.target.id, event.target.value));\n    };\n\n    _this.handleSendCodeClick =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(event) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                event.preventDefault();\n\n                _this.setState({\n                  isSendingCode: true\n                });\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.handleConfirmClick =\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(event) {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                event.preventDefault();\n\n                _this.setState({\n                  isConfirming: true\n                });\n\n                _context2.prev = 2;\n                _context2.next = 5;\n                return Auth.forgotPasswordSubmit(_this.state.email, _this.state.code, _this.state.password);\n\n              case 5:\n                _this.setState({\n                  confirmed: true\n                });\n\n                _context2.next = 12;\n                break;\n\n              case 8:\n                _context2.prev = 8;\n                _context2.t0 = _context2[\"catch\"](2);\n                alert(_context2.t0.message);\n\n                _this.setState({\n                  isConfirming: false\n                });\n\n              case 12:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, null, [[2, 8]]);\n      }));\n\n      return function (_x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    _this.state = {\n      code: \"\",\n      email: \"\",\n      password: \"\",\n      codeSent: false,\n      confirmed: false,\n      confirmPassword: \"\",\n      isConfirming: false,\n      isSendingCode: false\n    };\n    return _this;\n  }\n\n  _createClass(ResetPassword, [{\n    key: \"validateCodeForm\",\n    value: function validateCodeForm() {\n      return this.state.email.length > 0;\n    }\n  }, {\n    key: \"validateResetForm\",\n    value: function validateResetForm() {\n      return this.state.code.length > 0 && this.state.password.length > 0 && this.state.password === this.state.confirmPassword;\n    }\n  }, {\n    key: \"renderRequestCodeForm\",\n    value: function renderRequestCodeForm() {\n      return React.createElement(\"form\", {\n        onSubmit: this.handleSendCodeClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        bsSize: \"large\",\n        controlId: \"email\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, \"Email\"), React.createElement(FormControl, {\n        autoFocus: true,\n        type: \"email\",\n        value: this.state.email,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      })), React.createElement(LoaderButton, {\n        block: true,\n        type: \"submit\",\n        bsSize: \"large\",\n        loadingText: \"Sending\\u2026\",\n        text: \"Send Confirmation\",\n        isLoading: this.state.isSendingCode,\n        disabled: !this.validateCodeForm(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }));\n    }\n  }, {\n    key: \"renderConfirmationForm\",\n    value: function renderConfirmationForm() {\n      return React.createElement(\"form\", {\n        onSubmit: this.handleConfirmClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        bsSize: \"large\",\n        controlId: \"code\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, \"Confirmation Code\"), React.createElement(FormControl, {\n        autoFocus: true,\n        type: \"tel\",\n        value: this.state.code,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }), React.createElement(HelpBlock, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, \"Please check your email (\", this.state.email, \") for the confirmation code.\")), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }), React.createElement(FormGroup, {\n        bsSize: \"large\",\n        controlId: \"password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, \"New Password\"), React.createElement(FormControl, {\n        type: \"password\",\n        value: this.state.password,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        bsSize: \"large\",\n        controlId: \"confirmPassword\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, \"Confirm Password\"), React.createElement(FormControl, {\n        type: \"password\",\n        onChange: this.handleChange,\n        value: this.state.confirmPassword,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      })), React.createElement(LoaderButton, {\n        block: true,\n        type: \"submit\",\n        bsSize: \"large\",\n        text: \"Confirm\",\n        loadingText: \"Confirm\\u2026\",\n        isLoading: this.state.isConfirming,\n        disabled: !this.validateResetForm(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }));\n    }\n  }, {\n    key: \"renderSuccessMessage\",\n    value: function renderSuccessMessage() {\n      return React.createElement(\"div\", {\n        className: \"success\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, React.createElement(Glyphicon, {\n        glyph: \"ok\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, \"Your password has been reset.\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, \"Click here to login with your new credentials.\")));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"ResetPassword\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, !this.state.codeSent ? this.renderRequestCodeForm() : !this.state.confirmed ? this.renderConfirmationForm() : this.renderSuccessMessage());\n    }\n  }]);\n\n  return ResetPassword;\n}(Component);\n\nexport { ResetPassword as default };","map":{"version":3,"sources":["C:\\Users\\SANTOSH\\Desktop\\Front_end\\client\\src\\components\\auth\\ResetPassword.js"],"names":["React","Component","Auth","Link","ResetPassword","props","handleChange","event","setState","target","id","value","handleSendCodeClick","preventDefault","isSendingCode","handleConfirmClick","isConfirming","forgotPasswordSubmit","state","email","code","password","confirmed","alert","message","codeSent","confirmPassword","length","validateCodeForm","validateResetForm","renderRequestCodeForm","renderConfirmationForm","renderSuccessMessage"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Auth } from \"aws-amplify\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport \"./ResetPassword.css\";\r\n\r\nexport default class ResetPassword extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      code: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      codeSent: false,\r\n      confirmed: false,\r\n      confirmPassword: \"\",\r\n      isConfirming: false,\r\n      isSendingCode: false\r\n    };\r\n  }\r\n\r\n  validateCodeForm() {\r\n    return this.state.email.length > 0;\r\n  }\r\n\r\n  validateResetForm() {\r\n    return (\r\n      this.state.code.length > 0 &&\r\n      this.state.password.length > 0 &&\r\n      this.state.password === this.state.confirmPassword\r\n    );\r\n  }\r\n\r\n  handleChange = event => {\r\n    this.setState({\r\n      [event.target.id]: event.target.value\r\n    });\r\n  };\r\n\r\n  handleSendCodeClick = async event => {\r\n    event.preventDefault();\r\n\r\n    this.setState({ isSendingCode: true });\r\n\r\n    \r\n  };\r\n\r\n  handleConfirmClick = async event => {\r\n    event.preventDefault();\r\n\r\n    this.setState({ isConfirming: true });\r\n\r\n    try {\r\n      await Auth.forgotPasswordSubmit(\r\n        this.state.email,\r\n        this.state.code,\r\n        this.state.password\r\n      );\r\n      this.setState({ confirmed: true });\r\n    } catch (e) {\r\n      alert(e.message);\r\n      this.setState({ isConfirming: false });\r\n    }\r\n  };\r\n\r\n  renderRequestCodeForm() {\r\n    return (\r\n      <form onSubmit={this.handleSendCodeClick}>\r\n        <FormGroup bsSize=\"large\" controlId=\"email\">\r\n          <ControlLabel>Email</ControlLabel>\r\n          <FormControl\r\n            autoFocus\r\n            type=\"email\"\r\n            value={this.state.email}\r\n            onChange={this.handleChange}\r\n          />\r\n        </FormGroup>\r\n        <LoaderButton\r\n          block\r\n          type=\"submit\"\r\n          bsSize=\"large\"\r\n          loadingText=\"Sending…\"\r\n          text=\"Send Confirmation\"\r\n          isLoading={this.state.isSendingCode}\r\n          disabled={!this.validateCodeForm()}\r\n        />\r\n      </form>\r\n    );\r\n  }\r\n\r\n  renderConfirmationForm() {\r\n    return (\r\n      <form onSubmit={this.handleConfirmClick}>\r\n        <FormGroup bsSize=\"large\" controlId=\"code\">\r\n          <ControlLabel>Confirmation Code</ControlLabel>\r\n          <FormControl\r\n            autoFocus\r\n            type=\"tel\"\r\n            value={this.state.code}\r\n            onChange={this.handleChange}\r\n          />\r\n          <HelpBlock>\r\n            Please check your email ({this.state.email}) for the confirmation\r\n            code.\r\n          </HelpBlock>\r\n        </FormGroup>\r\n        <hr />\r\n        <FormGroup bsSize=\"large\" controlId=\"password\">\r\n          <ControlLabel>New Password</ControlLabel>\r\n          <FormControl\r\n            type=\"password\"\r\n            value={this.state.password}\r\n            onChange={this.handleChange}\r\n          />\r\n        </FormGroup>\r\n        <FormGroup bsSize=\"large\" controlId=\"confirmPassword\">\r\n          <ControlLabel>Confirm Password</ControlLabel>\r\n          <FormControl\r\n            type=\"password\"\r\n            onChange={this.handleChange}\r\n            value={this.state.confirmPassword}\r\n          />\r\n        </FormGroup>\r\n        <LoaderButton\r\n          block\r\n          type=\"submit\"\r\n          bsSize=\"large\"\r\n          text=\"Confirm\"\r\n          loadingText=\"Confirm…\"\r\n          isLoading={this.state.isConfirming}\r\n          disabled={!this.validateResetForm()}\r\n        />\r\n      </form>\r\n    );\r\n  }\r\n\r\n  renderSuccessMessage() {\r\n    return (\r\n      <div className=\"success\">\r\n        <Glyphicon glyph=\"ok\" />\r\n        <p>Your password has been reset.</p>\r\n        <p>\r\n          <Link to=\"/login\">\r\n            Click here to login with your new credentials.\r\n          </Link>\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"ResetPassword\">\r\n        {!this.state.codeSent\r\n          ? this.renderRequestCodeForm()\r\n          : !this.state.confirmed\r\n            ? this.renderConfirmationForm()\r\n            : this.renderSuccessMessage()}\r\n      </div>\r\n    );\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}