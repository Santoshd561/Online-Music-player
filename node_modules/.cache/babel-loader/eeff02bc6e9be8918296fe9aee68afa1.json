{"ast":null,"code":"// import React, { Component } from 'react';\n// import LineChart from 'react-linechart';\n// var CanvasJSReact = require('./canvasjs.react');\n// var CanvasJS = CanvasJSReact.CanvasJS;\n// var dataPoints =[];\n// export default class Chart extends Component {\n//         render() {\t\n//             const options = {\n//                 theme: \"light2\",\n//                 title: {\n//                     text: \"Stock Price of NIFTY 50\"\n//                 },\n//                 axisY: {\n//                     title: \"Price in USD\",\n//                     prefix: \"$\",\n//                     includeZero: false\n//                 },\n//                 data: [{\n//                     type: \"line\",\n//                     xValueFormatString: \"MMM YYYY\",\n//                     yValueFormatString: \"$#,##0.00\",\n//                     dataPoints: dataPoints\n//                 }]\n//             }\n//             return (\n//             <div>\n//                 <CanvasJSChart options = {options} \n//                      onRef={ref => this.chart = ref}\n//                 />\n//                 {/*You can get reference to the chart instance as shown above using onRef. This allows you to access all chart properties and methods*/}\n//             </div>\n//             );\n//         }\n//         componentDidMount(){\n//             var chart = this.chart;\n//             fetch('https://canvasjs.com/data/gallery/react/nifty-stock-price.json')\n//             .then(function(response) {\n//                 return response.json();\n//             })\n//             .then(function(data) {\n//                 for (var i = 0; i < data.length; i++) {\n//                     dataPoints.push({\n//                         x: new Date(data[i].x),\n//                         y: data[i].y\n//                     });\n//                 }\n//                 chart.render();\n//             });\n//         }\n//     }\n//     module.exports = Chart;","map":{"version":3,"sources":["C:\\Users\\SANTOSH\\Desktop\\Front_end\\client\\src\\components\\auth\\Chart.js"],"names":[],"mappings":"AAAA;AACA;AAEA;AACA;AAGA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["// import React, { Component } from 'react';\r\n// import LineChart from 'react-linechart';\r\n\r\n// var CanvasJSReact = require('./canvasjs.react');\r\n// var CanvasJS = CanvasJSReact.CanvasJS;\r\n\r\n \r\n// var dataPoints =[];\r\n \r\n// export default class Chart extends Component {\r\n   \r\n     \r\n//         render() {\t\r\n//             const options = {\r\n//                 theme: \"light2\",\r\n//                 title: {\r\n//                     text: \"Stock Price of NIFTY 50\"\r\n//                 },\r\n//                 axisY: {\r\n//                     title: \"Price in USD\",\r\n//                     prefix: \"$\",\r\n//                     includeZero: false\r\n//                 },\r\n//                 data: [{\r\n//                     type: \"line\",\r\n//                     xValueFormatString: \"MMM YYYY\",\r\n//                     yValueFormatString: \"$#,##0.00\",\r\n//                     dataPoints: dataPoints\r\n//                 }]\r\n//             }\r\n//             return (\r\n//             <div>\r\n//                 <CanvasJSChart options = {options} \r\n//                      onRef={ref => this.chart = ref}\r\n//                 />\r\n//                 {/*You can get reference to the chart instance as shown above using onRef. This allows you to access all chart properties and methods*/}\r\n//             </div>\r\n//             );\r\n//         }\r\n        \r\n//         componentDidMount(){\r\n//             var chart = this.chart;\r\n//             fetch('https://canvasjs.com/data/gallery/react/nifty-stock-price.json')\r\n//             .then(function(response) {\r\n//                 return response.json();\r\n//             })\r\n//             .then(function(data) {\r\n//                 for (var i = 0; i < data.length; i++) {\r\n//                     dataPoints.push({\r\n//                         x: new Date(data[i].x),\r\n//                         y: data[i].y\r\n//                     });\r\n//                 }\r\n//                 chart.render();\r\n//             });\r\n//         }\r\n//     }\r\n     \r\n//     module.exports = Chart;                  "]},"metadata":{},"sourceType":"module"}